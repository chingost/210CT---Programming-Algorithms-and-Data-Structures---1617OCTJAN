'''Given a sequence of n integer numbers,
extract the sub-sequence of maximum length which is in
ascending order.
Example input: L = [1,2,3,4,1,5,1,6,7] Output: [1,2,3,4]'''

seq=[1,2,3,4,1,2,4,1]

def longestSeq(seq):
    subSeq=[[]]#list to store any subsequences in ascending order found
    try:
        for n in range(len(seq)):
            print(subSeq)
            if seq[n] < seq[n+1]:#if seq[n] is less than the element ahead add to subseq
                subSeq[-1].append(seq[n])
            elif seq[n] > seq[n+1]:#if it breaks the sequence create a new supsequnce and add it to the end of its sequence
                subSeq[-1].append(seq[n])
                subSeq.append([])
    except IndexError:#once comparison gets to the end there will be an index error as there is no n+1
        if seq[-1] > seq[-2]:#check if it fits into the latest subsequenece or needs to be on its own
            subSeq[-1].append(seq[-1])
        else:
            subSeq.append([])
            subSeq[-1].append(seq[-1])
    maximum=[]#will store and return longest subsequence
    for i in subSeq:
        if len(i)>len(maximum):
            maximum=i
    return maximum

print(longestSeq(seq))
